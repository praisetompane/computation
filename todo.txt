- 1_mathematics_of_computing:
    - lectures:
        - Prof. Tom Leighton, Dr. Marten van Dijk. 2010. MIT 6042J Mathematics for Computer Science:
            - current: Lecture 1: Introduction and proofs: *
    - readings:
        - https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/pages/readings/
        - Epp, S.S. 2010. Discrete mathematics with applications. 4th ed. Cengage Learning. Boston, MA.
            - current position: pg. 6, exercise 1.1, question 4
    - recitations:
        - https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/pages/recitations/
    - assignments:
        - https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/pages/assignments/
    - exams:
        - https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/pages/exams/

- 0_foundations/0_theory_of_computation/3_design_and_analysis_of_algorithms:
    - resource index: https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/pages/resource-index/
    - lectures:
        - Prof. Erik Demaine, Dr. Jason Ku, Prof. Justin Solomon. 2020. MIT 6.006 Introduction to Algorithms:
            - current: 1. Algorithms and Computation [ZA-tUyM_y7s]: *
        - Prof. Erik Demaine, Prof. Srini Devadas. 2011. MIT 6.006 Introduction to Algorithms:
            - current: Lecture 2: Models of Computation, Document Distance: *
    - readings:
        - https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/pages/lecture-notes/
    - assignments:
        - https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/pages/assignments/
        - practice:
            - https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/pages/practice-problems/
    - exams:
    - quizzes: https://ocw.mit.edu/courses/6-006-introduction-to-algorithms-spring-2020/pages/quizzes/

- 5_software_and_its_engineering/0_software_notations_and_tools/3_compilers
        - lectures:
            - Prof. Alex Aiken. StanfordOnline SOE.YCSCS1 Compilers
                - https://learning.edx.org/course/course-v1:StanfordOnline+SOE.YCSCS1+3T2024/home

            - Neso Academy. 2023. Compiler Design:
                - https://www.youtube.com/playlist?list=PLBlnK6fEyqRjT3oJxFXRgjPNzeS-LFY-q

            - Prof. Martin Rinard, Prof. Saman Amarasinghe. 2005. MIT 6.035 Computer Language Engineering
                - https://www.youtube.com/playlist?list=PL0300FE43396456C1

            - Prof. Charles Leiserson, Prof. Julian Shun. 2018. MIT 6.172 Performance Engineering of Software Systems:
                - current: Lecture 9: What Compilers Can and Cannot Do: https://www.youtube.com/playlist?list=PLUl4u3cNGP63VIBQVWguXxZZi0566y7Wf
        - readings:
            - craftinginterpreters
                - https://craftinginterpreters.com/contents.html
                - computation_and_information/5_software_and_its_engineering/0_software_notations_and_tools/3_compilers/craftinginterpreters
            - https://ocw.mit.edu/courses/6-035-computer-language-engineering-sma-5502-fall-2005/pages/readings/

            - Cooper, Keith, and Linda Torczon. Engineering a Compiler. San Mateo, CA: Morgan Kaufman, 2003. ISBN: 155860698X.
                A modern classroom textbook, with increased emphasis on the back-end and implementation techniques. (Ark book)

            - Appel, Andrew W. Modern Compiler Implementation in Java®. Cambridge, UK: Cambridge University Press, 1997. ISBN: 0521583888.
                A textbook tutorial on compiler implementation, including techniques for many language features. (Tiger book)
                - https://www.cs.princeton.edu/~appel/modern/java/
                - https://www.cs.princeton.edu/~appel/modern/c/

            - Muchnick, Steven. Advanced Compiler Design and Implementation. 1st ed. San Mateo, CA: Morgan Kaufman, 1997. ISBN: 1558603204.
                Essentially a recipe book of optimizations; very complete and suited for industrial practitioners and researchers. (Whale book)

            - Aho, Alfred V., Ravi Sethi, and Jeffrey Ullman. Compilers: Principles, Techniques and Tools. Reading, MA: Addison-Wesley, 1986. ISBN: 0201100886.
                The classic compilers textbook, although its front-end emphasis reflects its age. (Dragon book)

- 2_hardware:
    - lectures:
        - Prof. Chris Terman. 2017. MIT 6.004 Computation Structures
            - current: 1.2.1 What is Information？ [R0tFDXBZvKI]: *

        - Prof. Charles Leiserson, Prof. Julian Shun. 2018. MIT 6.172 Performance Engineering of Software Systems
            - current: None
    - readings:
        - https://ocw.mit.edu/courses/6-004-computation-structures-spring-2017/
        - but_how_do_it_know?_the_basic_principles_of_computers_for_everyone
        - https://github.com/brianrhall/Assembly
    - assignments:
    - exams:

============================================================================================================
- next₁:
    - 0_foundations/0_theory_of_computation:
        - lectures:
            - Prof. Michael Sipser. 2020. MIT 18.404J Theory of Computation
                - https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY
        - readings:
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/lecture-notes/
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/readings/
        - recitations:
        - assignments:
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/assignments/
        - exams:
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/exams/

    - 5_software_and_its_engineering/0_software_notations_and_tools/1_general_programming_languages:
        - lectures:
        - readings:
            - c
                - complete: https://github.com/praisetompane/c
                - lectures:
                    - Neso Academy C Programming
                        - https://www.youtube.com/watch?v=rLf3jnHxSmU&list=PLBlnK6fEyqRggZZgYpPMUxdY1CYkZtARR&pp=iAQB
                - readings:
                    - Brian Kernighan, Dennis Ritchie, The C Programming Language

                - write simplified interpreter and compiler for the language in the language
                - write HTTP server

            - assembly
                - lectures:
                    - Prof. Charles Leiserson, Prof. Julian Shun. 2018. MIT 6.172 Performance Engineering of Software Systems:
                        - https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2018/lecture-videos/lecture-4-assembly-language-computer-architecture
                            Lecture 4: Assembly Language & Computer Architecture:
                                - https://ocw.mit.edu/courses/6-172-performance-engineering-of-software-systems-fall-2018/resources/lecture-4-assembly-language-computer-architecture/
                            Lecture 5: C to Assembly
                                - https://ocw.mit.edu/courses/6-172-performance-engineering-of-software-systems-fall-2018/resources/lecture-5-c-to-assembly/
                - readings:
                    - https://github.com/brianrhall/Assembly

            - machine_code: instruction sets
                - x86
                - arm
                - mibs
                - risc-v:
                    - https://github.com/riscv
                    - https://github.com/mit-pdos/xv6-riscv
                - cisc
                - resources: https://crackmes.one

            - haskell
                - complete: /computation_and_information/language_template
                - source:
                    - https://github.com/haskell
                    - https://github.com/ghc
                - write simplified interpreter and compiler for the language in the language

            - pytorch

            - verilog
                - complete: https://github.com/praisetompane/verilog
                - https://web.mit.edu/6.111/www/f2017/handouts/L03_4.pdf
                - https://inst.eecs.berkeley.edu/~eecs151/fa20/files/verilog/Verilog_Primer_Slides.pdf
                - https://www.chipverify.com/verilog/verilog-tutorial

            - coq
                - source:
                    - https://github.com/coq
            - LEAN
                - source:
                    - https://github.com/leanprover

            - rust:
                - complete: https://github.com/praisetompane/rust
                    - https://www.rust-lang.org
                    - https://github.com/praisetompane/rust/tree/main
                - write simplified interpreter and compiler for the language in the language

            - unified_discipline_of_computer_programming
                - readings: /1_general_programming_languages/concepts_techniques_and_models_of_computer_programming.van_roy_p.pdf
        - assignments:
        - exams:

    - 3_computer_systems_organization:
        - lectures:
            - Morris Robert, Madden Samuel. 2005. MIT 6.033 Computer System Engineering
                - https://www.youtube.com/playlist?list=PL6535748F59DCA484
                - https://dspace.mit.edu/handle/1721.1/118791
            - Dr. Katrina LaCurts. 2018. MIT 6.033 Computer System Engineering
                - https://ocw.mit.edu/courses/6-033-computer-system-engineering-spring-2018/pages/syllabus/
        - readings:
        - assignments:
        - exams:

    - 4_networks:
        - lectures:
            - Web Technology. https://www.youtube.com/playlist?list=PLrjkTql3jnm8d1ddpVKifXO_fPjSKATCp
                - https://www.education4u.in
        - readings:
        - assignments:
        - exams:

============================================================================================================
next₂:
    - 5_software_and_its_engineering/1_software_organisation_and_properties
        - lectures:
            - Morris Robert, Madden Samuel. 2005. MIT 6.033 Computer System Engineering
                - https://www.youtube.com/playlist?list=PL6535748F59DCA484
                - https://dspace.mit.edu/handle/1721.1/118791
            - Dr. Katrina LaCurts. 2018. MIT 6.033 Computer System Engineering
                - https://ocw.mit.edu/courses/6-033-computer-system-engineering-spring-2018/pages/syllabus/
        - readings:
            - /contextual_software_domains/operating_systems
                - Linux: https://github.com/torvalds/linux

    - 6_computing_methodologies/artificial_intelligence:
        - lectures:
            - Prof. Shai Ben-David. 2015. University of Waterloo CS 485-685 Foundations of Machine Learning
            - Prof. Tamara Broderick. 2020. MIT 6.036 Introduction to Machine Learning
        - readings:
        - assignments:
        - exams:

    - 6_computing_methodologies/symbolic_and_algebraic_manipulation:
        - lectures:
        - readings:
        - assignments:
        - exams:

    - 6_computing_methodologies/concurrent_computing_methodologies:
        - lectures:
        - readings:
        - assignments:
        - exams:

============================================================================================================
- next field template:
    - lectures:
    - readings:
    - assignments:
    - exams:
============================================================================================================
legend:
    *: S visit complete
    **: R3 visit complete
