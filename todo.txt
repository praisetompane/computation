purpose: understand computation and information.

- priority:
    - learn
    - field update
- learn:
    - computation_and_information/0_foundations: 2 hours
        - degree module: UNISA COS1501 | 6.042[J] | 18.062[J]
            - Purpose:
                - To introduce students to some concepts from Discrete Mathematics as a theoretical foundation for Computer Science.
                - This background is relevant to:
                    - relational databases,
                    - the development of provably correct programs,
                    - the analysis of algorithms.
        - library:
            - MIT 6.042J Mathematics For Computer Science
                - in offline library
                - current: Lecture 1: Introduction and Proofs + Lecture Notes + Recitation, ...
                - playlist: https://www.youtube.com/playlist?list=PLB7540DEDD482705B
        - readings:
            - Epp, S.S. 2010. Discrete mathematics with applications. 4th ed. Cengage Learning. Boston, MA.
                - current position: pg. 6, exercise 1.1, question 4
            - https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-fall-2010/
        - recitations:
        - assignments:
        - exams:

    - 0_foundations/3_design_and_analysis_of_algorithms: 2 hours
        - degree module: UNISA COS2611 | MIT 18.410[J] | MIT 6.006
        - library:
            - MIT 6.006 Introduction to Algorithms, Spring 2020
                - in offline library
                - current: Lecture 1: Algorithms and Computation + Lecture Notes + Recitation, ...
                - https://www.youtube.com/playlist?list=PLUl4u3cNGP63EdVPNLG3ToM6LaEUuStEY
            - MIT 6.006 Introduction to Algorithms, Fall 2011
                - in offline library
                - https://www.youtube.com/playlist?list=PLUl4u3cNGP61Oq3tWYp6V_F-5jb5L2iHb
        - readings:
        - assignments:
        - exams:

    - 5_software_and_its_engineering/0_software_notations_and_tools: 2 hours
        - degree module: MIT 6.035
        - library:
            - MIT 6.035 Computer Language Engineering, Fall 2005
                NB: Compilers
                - in offline library
                - current: 
                - https://www.youtube.com/playlist?list=PL0300FE43396456C1

        - readings:
            - https://ocw.mit.edu/courses/6-035-computer-language-engineering-spring-2010/
            - https://ocw.mit.edu/courses/6-035-computer-language-engineering-spring-2010/pages/lecture-notes/
            - https://ocw.mit.edu/courses/6-004-computation-structures-spring-2017/pages/c11/
            - https://www.youtube.com/watch?v=F5-87RM_zHA&list=PLUl4u3cNGP62WVs95MNq3dQBqY2vGOtQ2&index=93&pp=iAQB
            - https://www.youtube.com/playlist?list=PLUl4u3cNGP62WVs95MNq3dQBqY2vGOtQ2
            - https://www.youtube.com/watch?v=yCd3CzGSte8&list=TLPQMjUwNzIwMjToaaZrcaOFcQ&index=2
            - https://ocw.mit.edu/courses/6-035-computer-language-engineering-sma-5502-fall-2005/
            - https://ocw.mit.edu/courses/6-035-computer-language-engineering-spring-2010/
            - https://www.youtube.com/playlist?list=PLUl4u3cNGP62WVs95MNq3dQBqY2vGOtQ2
            - https://github.com/praisetompane/computation_and_information/tree/main/5_software_and_its_engineering/0_software_notations_and_tools/unified_discipline_of_computer_programming
                - What is Programming Languages Research?: https://www.youtube.com/watch?v=70_DFytfnWw
            - python
                - complete: /computation_and_information/language_template
                - write simplified interpreter and compiler for the language in the language
                - finish studying Python language reference
            - c
                - complete: /computation_and_information/language_template
                - write simplified interpreter and compiler for the language in the language
            - assembly
                - https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2018/lecture-videos/lecture-4-assembly-language-computer-architecture
                - https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2018/lecture-videos/lecture-4-assembly-language-computer-architecture
            - machine_code: instruction sets
                - x86
                - arm
                - mibs
                - risc-v
                - cisc
            - verilog
                - https://www.chipverify.com/verilog/verilog-tutorial
                - https://inst.eecs.berkeley.edu/~eecs151/fa20/files/verilog/Verilog_Primer_Slides.pdf
                - https://web.mit.edu/6.111/www/f2017/handouts/L03_4.pdf
            - Unix: https://github.com/mit-pdos/xv6-riscv
            - Linux: https://github.com/torvalds/linux
            - javascript AND typescript
                - complete: /computation_and_information/language_template
                - write simplified interpreter and compiler for the language in the language
            - go
                - complete: /computation_and_information/language_template
                - write simplified interpreter and compiler for the language in the language
            - rust:
                - complete: /computation_and_information/language_template
                    - https://www.rust-lang.org
                    - https://github.com/praisetompane/rust/tree/main
                - write simplified interpreter and compiler for the language in the language
            - java
                - complete: /computation_and_information/language_template
                - write simplified interpreter and compiler for the language in the language
            - haskell
                - complete: /computation_and_information/language_template
                - write simplified interpreter and compiler for the language in the language
            - coq
            - pytorch

        - assignments:
        - exams:

    - 2_hardware: 2 hours
        - degree module:
        - library:
            - MIT 6.004 Computation Structures, Spring 2017
                - in offline library
                - current: 
                - https://www.youtube.com/playlist?list=PLUl4u3cNGP62WVs95MNq3dQBqY2vGOtQ2
            - MIT 6.172 Performance Engineering of Software Systems, Fall 2018:
            - https://www.youtube.com/playlist?list=PLUl4u3cNGP63VIBQVWguXxZZi0566y7Wf
        - readings:
            - https://ocw.mit.edu/courses/6-004-computation-structures-spring-2017/
            - but_how_do_it_know?_the_basic_principles_of_computers_for_everyone
        - assignments:
        - exams:
- field update:
    - Quanta Magazine: https://www.quantamagazine.org/computer-science/
    - ACM DL: https://dl.acm.org : browse what is happening in computing.
    - Development: https://www.infoq.com/development/
    - Architecture & Design: https://www.infoq.com/architecture-design/
    - AI, ML & Data Engineering: 
        https://www.infoq.com/ai-ml-data-eng/
        https://read.deeplearning.ai/the-batch/
    - Culture & Methods: 
        - https://www.infoq.com/culture-methods/
    - DevOps: https://www.infoq.com/devops/
    - General:
        - https://www.ischools.org/news/categories/news
        - https://www.media.mit.edu
        - HackerNews:  https://news.ycombinator.com/news
==============================================================================================
- next:

    - 0_foundations/0_theory_of_computation: 2 hours
        - degree module: MIT 18.404
        - library:
            - MIT 18.404J Theory of Computation, Fall 2020:
                - in offline library
                - https://www.youtube.com/playlist?list=PLUl4u3cNGP60_JNv2MmK3wkOt9syvfQWY
        - readings:
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/lecture-notes/
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/readings/
        - recitations:
        - assignments:
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/assignments/
        - exams:
            https://ocw.mit.edu/courses/18-404j-theory-of-computation-fall-2020/pages/exams/


- next_field_template
        - degree module:
        - videos:
        - readings: 
        - assignments:
        - exams:

==============================================================================================
next:

timeline:
    see .plan.txt

legend:
    *: visited today/last session
        nb: all subjects must be visited before a repeat visit.

================================================completed================================================
2023-October-28: https://en.wikipedia.org/wiki/History_of_computer_science
                    
